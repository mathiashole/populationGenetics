---
title: "EJERCICIOS P1"
date: today
date-format: "DD MMMM, YYYY"
author: 
  Mathias
abstract:
    Genetica de poblaciones
abstractspacing: double
appendix: false
fontfamily: libertine
monofont: inconsolata
monofontoptions: scaled=.95
fontsize: 12pt
geometry: 
  - top=2cm
  - bottom=2cm
  - left=2cm
  - right=2cm
urlcolor: darkblue
highlight-style: arrow
format: 
    pdf:
      toc: true
      number-sections: true
      colorlinks: true
---

# Ejercicio 5: Estudio farmaceutico

1. La frecuencia de un alelo autos√≥mico A en una poblaci√≥n es $p = 0.1$.
¬øCu√°l es el n√∫mero esperado de alelos A en una muestra de 20 alelos?
¬øCu√°l es la probabilidad de no observar el alelo A en la muestra?
2. Utilizando la funci√≥n rbinom, simule un gran n√∫mero de muestras de tama√±o $n = 20$ y
caracterice la distribuci√≥n de los resultados utilizando descriptores gr√°ficos y num√©ricos
apropiados.
3. Considere ahora el caso de $f(A) = p = 0.01$.¬øCu√°l es la probabilidad de observar el alelo
A en una muestra de $n = 20$?
4. La frecuencia observada de un alelo autos√≥mico diploide A es 3/10 (tama√±o de la
muestra $n = 10$). Utilice dbinom para calcular la probabilidad de observar esta frecuencia
en la muestra para un rango de frecuencias subyacentes en la poblaci√≥n entre $0,01$ y
$0,99$.
5. Genotipos como muestras aleatorias de tama√±o $n = 2$. Para un locus autos√≥mico
diploide con dos alelos, describa las proporciones de HW como esperanzas de la
distribuci√≥n binomial.
6. Para una muestra de $n = 10$ individuos, obtenga la frecuencia esperada de
heterocigotos para $f(A) = 0.3$ y utilice rbinom para simular un gran n√∫mero de muestras
y caracterizar la variaci√≥n aleatoria de la frecuencia observada de heterocigotos.
7. nota: el 3 muestra (no demuestra) que $MLE(p) = \hat{p}$
8. Para $n=4$, obtener en R una simulaci√≥n de todos los componentes del proceso
coalescente. Asumir que $N = 5\times 10^{5}$ y $\mu = 10-5$. Para la realizaci√≥n obtenida, calcular $\pi$, $S$
y $\theta_W$.
9. Structure:
El programa structure se corri√≥ con $K = 2$ y 90 genotipos, y la cadena de MCMC par√≥ en la
generaci√≥n $m-1$. Nos enfocamos en un s√≥lo locus con alelos.
El estado de la cadena en $m-1$ es el siguiente:
Frecuencias del alelo de referencia en cada subpoblaci√≥n:
$P(m-1)1 = 0.5$, $P(m-1)2 = 0.8$.
Ubicaci√≥n de los genotipos a subpoblaciones:

|      | Subpoblaci√≥n 1 | Subpoblaci√≥n 2 |
|------|----------------|----------------|
| $ùê¥ùê¥$ |      13        |      25        |
| $ùê¥ùëé$ |      24        |       13       |
| $ùëéùëé$  |      13        |      2         |
| Total |     50        |       40       |

a) Usando una distribuci√≥n apropiada, obtener valores propuestos de para la $P$
generaci√≥n $m[P(m)]$ para cada subpoblaci√≥n. Explicar, en cada caso, si deber√≠an ser 
aceptadas como los nuevos valores $P(m)_{1}$ y $P(m)_{2}$ y con qu√© regla de
probabilidad.
b) Ahora considerar un genotipo que puede moverse de la subpoblaci√≥n 1 a la 2.ùê¥ùëé
Explicar c√≥mo se toma la decisi√≥n de moverlo o no.
En las respuestas, incluir tanto las explicaciones como el c√≥digo de R o los c√°lculos
equivalentes.

# Ejercicio 1: Frecuencia de alelo p=0.1

Para responder a estas preguntas, tratamos la extracci√≥n de cada alelo como un ensayo de Bernoulli, donde "√©xito" es obtener el alelo A.

- ¬øCu√°l es el n√∫mero esperado de alelos A en una muestra de 20 alelos?
La esperanza de una distribuci√≥n binomial se calcula como $E(X)=n‚ãÖp$. En este caso, el tama√±o de la muestra (n) es 20 y la frecuencia al√©lica (p) es 0.1.
    $E(X)=20‚ãÖ0.1=2$
Se espera que, en promedio, haya 2 alelos A en una muestra de 20.

- ¬øCu√°l es la probabilidad de no observar el alelo A en la muestra?
Aqu√≠ buscamos la probabilidad de obtener 0 √©xitos (k=0) en 20 ensayos. Usamos la f√≥rmula de la funci√≥n de la probabilidad binomial: $P(X=k)=\binom{n}{k} p^k‚ãÖ(1‚àíp)^{n‚àík}$.
    $P(X = 0) = \binom{20}{0} (0.1)^0‚ãÖ(1‚àí0.1)^20 = 1‚ãÖ1‚ãÖ(0.9)^20 \simeq 0.1216$.
    Hay un $12.16\%$ de probabilidad de no encontrar ning√∫n alelo A en la muestra.

# Ejercicio 2: Simulaci√≥n con rbinom

El objetivo de este ejercicio es simular el proceso de muestreo miles de veces para ver c√≥mo los resultados se distribuyen alrededor del valor esperado. rbinom en R genera n√∫meros aleatorios basados en una distribuci√≥n binomial.

- rbinom simula el n√∫mero de alelos A en muestras de tama√±o fijo.

- Esperamos ver que la media $\simeq 2$ y la desviaci√≥n est√°ndar $\simeq 1.34$.

- El histograma muestra que la mayor√≠a de las muestras tienen entre 0 y 5 alelos A, con el 2 como valor m√°s probable.

```{r}

# Definir los par√°metros
n <- 20  # Tama√±o de la muestra
p <- 0.1  # Frecuencia del alelo A

# Simular 10,000 muestras
num_simulaciones <- 10000
muestras_simuladas <- rbinom(n = num_simulaciones, size = n, prob = p)

# Descriptores num√©ricos
media_simulada <- mean(muestras_simuladas)
print(paste("La media de las simulaciones es:", round(media_simulada, 2)))
print(paste("La desviaci√≥n est√°ndar de las simulaciones es:", round(sd(muestras_simuladas), 2)))

# Gr√°fico de la distribuci√≥n
hist(muestras_simuladas,
     breaks = seq(-0.5, n + 0.5, by = 1),
     col = "skyblue",
     border = "white",
     main = "Distribuci√≥n de alelos A en 10,000 muestras",
     xlab = "N√∫mero de alelos A",
     ylab = "Frecuencia")
```

# Ejercicio 3: Frecuencia de alelo p=0.01

Para encontrar la probabilidad de observar el alelo A, es m√°s f√°cil calcular la probabilidad de no observarlo (0 alelos) y restarla de 1. ¬øCu√°l es la probabilidad de que, en esas 20 copias, aparezca al menos una vez el alelo A?.

$P(observar A)=1‚àíP(no observar A)$
$P(X \geq 1) = 1‚àíP(X=0) = 1 ‚àí \binom{20}{0}(0.01)^0‚ãÖ(0.99)^20= 1 ‚àí (0.99)^20 \simeq 1‚àí0.8179 = 0.1821$.
La probabilidad de observar al menos un alelo A es de aproximadamente 18.21%.

# Ejercicio 4: Frecuencia observada de 3/10

Aqu√≠ invertimos el problema: tenemos la muestra y queremos saber qu√© tan probable es esta observaci√≥n para diferentes frecuencias poblacionales. Usamos dbinom, que calcula la probabilidad de un n√∫mero espec√≠fico de √©xitos.

Tenemos una muestra de 10 copias de un gen, y en ellas observamos que 3 son del alelo A.
La pregunta es: ¬øqu√© tan probable es esta observaci√≥n (3 de 10) si asumimos distintas frecuencias del alelo en la poblaci√≥n?

La distribuci√≥n binomial nos dice cu√°l es la probabilidad de observar un n√∫mero exacto de ‚Äú√©xitos‚Äù (en este caso, alelos A) en un n√∫mero fijo de ensayos (10 copias).

La funci√≥n dbinom(k, n, p)

```{r}
# Definir los par√°metros de la muestra
k_observado <- 3
n_muestra <- 10

# Rango de frecuencias poblacionales para evaluar
frecuencias_poblacionales <- seq(0.01, 0.99, by = 0.01) # Esto permite que recorra el vector cada 0.01

# Calcular la probabilidad para cada frecuencia poblacional
probabilidades <- dbinom(x = k_observado, size = n_muestra, prob = frecuencias_poblacionales)

# Gr√°fico de la verosimilitud
plot(frecuencias_poblacionales,
     probabilidades,
     type = "l",
     lwd = 2,
     col = "darkgreen",
     main = "Probabilidad de observar 3/10 alelos A",
     xlab = "Frecuencia poblacional hipot√©tica (p)",
     ylab = "Probabilidad de la muestra observada")

# Marcar el punto de m√°xima probabilidad
max_p <- frecuencias_poblacionales[which.max(probabilidades)]
points(max_p, max(probabilidades), col = "red", pch = 19)
text(max_p, max(probabilidades), labels = paste("p =", round(max_p, 2)), pos = 4, col = "red")
```

La curva muestra c√≥mo cambia esa probabilidad cuando vamos variando $p$. La curva tiene un pico en 
$p=0.3$, porque justamente $3/10 = 0.3$.

Lo que est√°s dibujando es la funci√≥n de verosimilitud de una binomial:

$L(p)=P(X=k‚à£n,p)= \binom{n}{k} p^k(1‚àíp)^{n‚àík}$ con $k=3$ y $n=10$.

El valor de $p$ que maximiza esta funci√≥n se llama estimador de m√°xima verosimilitud (MLE).

Si derivamos respecto a $p$:
$\frac{d}{dp}[p^k(1‚àíp)n‚àík]=0$ el resultado es $\hat{p}=k/n$ En este caso seria $\hat{p}=3/10$ Esto significa que, si tu muestra observada son 3 √©xitos en 10 intentos, el valor de $p$ que hace esa observaci√≥n m√°s probable es exactamente la frecuencia muestral (la proporci√≥n observada).


# Ejercicio 5: Proporciones de Hardy-Weinberg (HW)

Las proporciones de Hardy-Weinberg describen la distribuci√≥n de genotipos en una poblaci√≥n en equilibrio. Podemos ver la formaci√≥n de un genotipo como el resultado de tomar una muestra de 2 alelos, uno de cada padre.

Genotipo homocigoto dominante (AA): Para obtener este genotipo, ambos alelos deben ser A. La probabilidad de que esto ocurra es la de obtener 2 √©xitos $(k=2)$ en 2 ensayos, lo que es igual a $p^2$.
    $P(X=2)=\binom{2}{2}‚ãÖp^2‚ãÖ(1‚àíp)0=p^2.$ siendo que $\binom{2}{2} =  \frac{2!}{2!(2-2)!} = 1$

Genotipo heterocigoto (Aa): Para obtener este genotipo, necesitamos 1 alelo A y 1 alelo a. La probabilidad de obtener 1 √©xito (k=1) en 2 ensayos es $2p(1‚àíp)$.
    $P(X=1)=\binom{2}{1}‚ãÖp^1‚ãÖ(1‚àíp)^1 = 2p(1‚àíp)$. siendo que $\binom{2}{1} =  \frac{2!}{1!(2-1)!} = \frac{2}{1} = 2$

Las proporciones de HW $(p2, 2pq, q2)$ son, de hecho, las esperanzas de una distribuci√≥n binomial con n=2 ensayos, modelando la selecci√≥n aleatoria de alelos para formar un genotipo.

# Ejercicio 6: Frecuencia esperada de heterocigotos

Primero calculamos la frecuencia esperada de heterocigotos en la poblaci√≥n usando las proporciones de HW, y luego usamos rbinom para simular su variaci√≥n en muestras.

    Frecuencia esperada de heterocigotos:
    Si la frecuencia de un alelo es p=0.3, la frecuencia de heterocigotos en la poblaci√≥n es 2p(1‚àíp)=2‚ãÖ0.3‚ãÖ(1‚àí0.3)=0.42. En una muestra de 10 individuos, el n√∫mero esperado de heterocigotos es 10‚ãÖ0.42=4.2.

    Simulaci√≥n de la variaci√≥n:
    El tama√±o de la muestra es de 10 individuos, y la probabilidad de que un individuo sea heterocigoto es 0.42. Usamos rbinom para simular esto.

```{r}
# Definir los par√°metros
p_alelo_A <- 0.3
prob_heterocigoto <- 2 * p_alelo_A * (1 - p_alelo_A)
n_individuos <- 10

# Simular la variaci√≥n de la frecuencia de heterocigotos
num_simulaciones <- 10000
muestras_heterocigotos <- rbinom(n = num_simulaciones, size = n_individuos, prob = prob_heterocigoto)

# Caracterizar la distribuci√≥n
media_simulada_h <- mean(muestras_heterocigotos)
print(paste("La media de heterocigotos simulados es:", round(media_simulada_h, 2)))
print(paste("La desviaci√≥n est√°ndar de las simulaciones es:", round(sd(muestras_heterocigotos), 2)))

# Gr√°fico de la distribuci√≥n
hist(muestras_heterocigotos,
     breaks = seq(-0.5, n_individuos + 0.5, by = 1),
     col = "lightcoral",
     border = "white",
     main = "Distribuci√≥n de heterocigotos en 10,000 muestras",
     xlab = "N√∫mero de heterocigotos",
     ylab = "Frecuencia")
```

# Ejercicio 8: Simulaci√≥n del proceso coalescente con n=4

8. Para $n=4$, obtener en R una simulaci√≥n de todos los componentes del proceso
coalescente. Asumir que $N = 5\times 10^{5}$ y $\mu = 10-5$. Para la realizaci√≥n obtenida, calcular $\pi$, $S$
y $\theta_W$.

Queremos simular el coalescente para n=4 alelos, con:

Tama√±o efectivo de la poblaci√≥n $N=5 \times 10^5$

Tasa de mutaci√≥n $\mu=10^‚àí5$

Y a partir de esa genealog√≠a calcular:

$\pi$ (diversidad nucleot√≠dica promedio por par)

$S$ (n√∫mero de sitios segregantes)

$\theta_w$ (estimador de Watterson).

1. Para $n=4$ existen dos topologias posibles que tienen sus probabilidades asociadas. Estas topologias se forman con la siguiente distribucion de alelos (2,2) con probabilidad $1/3$ y la distribucion (3,1) con la probabilidad de $2/3$. Esta ultima distribucion puede tener la bifurcacion mas reciente en uno de los ancestros hermanos por eso su probabilidad es de $2/3$. Para simular este proceso usaremos la funcion de R runif (random uniforme), esta funcion nos proporciona un muestreo de un numero al azar entre 0 y 1.

```{r}

runif(1)

```

Si $runif > 0.33333$ nos quedamos con la topologia mas probable, si $runif \leq 0.33333$ nos quedamos con la manos probable de las topologias.

2. Los tiempos de coalescencia

Imaginemos que empezamos con $n=4$ linajes.
El proceso coalescente consiste en ver cu√°nto tardan en irse uniendo hasta llegar a un ancestro com√∫n.

La probabilidad de coalescencia por generaci√≥n depende de:

El n√∫mero de pares posibles: $\binom{n}{2}=\frac{n!}{2!(n-2)!}=n(n‚àí1)/2$
Y de $1/(2N)$, que es la probabilidad de que un par coalesca en una generaci√≥n.
El tiempo de espera hasta el evento coalescente es el inverso de esa probabilidad.

- De 4 a 3 linajes:
    Pares posibles: $C(4,2)=6$ usando el coficiente binomial $\binom{4}{2} = \frac{4!}{2!(4-2)!}$
    Probabilidad por generaci√≥n: $\binom{4}{2}.\frac{1}{2N} = 6/(2N)$
    Tiempo esperado: $E[T_4]=2N/6=10^6/6‚âà1.67√ó10^5$

- De 3 a 2 linajes:
    Pares posibles: $C(3,2)=3$ usando el coficiente binomial $\binom{3}{2} = \frac{3!}{2!(3-2)!}$
    Probabilidad por generaci√≥n: $\binom{3}{2}.\frac{1}{2N} = 3/(2N)$
    Tiempo esperado: $E[T_3]=2N/3‚âà3.33√ó10^5$

- De 2 a 1 linajes (MRCA):
    Pares posibles: $C(2,2)=1$ usando el coficiente binomial $\binom{2}{2} = \frac{2!}{2!(2-2)!}$
    Probabilidad por generaci√≥n: $\binom{2}{2}.\frac{1}{2N} = 1/(2N)$
    Tiempo esperado:  $E[T_2]=2N=10^6$

Entonces los tiempos de espera esperados son:

$T_4‚âà1.67√ó10^5$
$T_3‚âà3.33√ó10^5$
$T_2=10^6$

3. Tiempo total de ramas del √°rbol

Cada intervalo de tiempo tiene un cierto n√∫mero de linajes que lo ‚Äúrecorren‚Äù: $Ttotal=(n_1‚ãÖT_4)+(n_2‚ãÖT_3)+(n_3‚ãÖT_2)$

- Con 4 linajes durante $T_4$ : $4 \cdot 1.67 \times 10^5‚âà6.68 \times 10^5$

- Con 3 linajes durante $T_3$ : $3 \cdot 3.33 \times 10^5‚âà9.99 \times 10^5$

- Con 2 linajes durante $T_2$ : $2 \cdot 10^6=2 \times 10^6$

Sumando: $Ttotal‚âà3.67 \times 10^6$

4. N√∫mero de sitios segregantes $(S)$

El n√∫mero de sitios segregantes es simplemente: $S=Ttotal \cdot \mu$

$S‚âà(3.67 \times 10^6) \cdot (10^‚àí5)‚âà36.7$

5. C√°lculo de $\pi$ (diversidad nucleot√≠dica promedio por par)

$\pi$ mide las diferencias promedio entre pares de secuencias.

En el coalescente, la esperanza de $\pi$ es: $\pi =4N\mu$

Con nuestros valores: $\pi=4‚ãÖ(5 \times 10^5)‚ãÖ10^‚àí5=20$

En la pr√°ctica, $\pi$ depender√° de c√≥mo se reparten las 37 mutaciones en el √°rbol, pero el valor esperado es $\pi ‚âà 20$.

6. C√°lculo de $\theta_W$ (Theta de Watterson)

Se define como: $\theta_W = S/a_n$ donde $a_n = \sum_{i=1}^{n-1}1/i$

Para $n=4$: $a_4=1+1/2+1/3‚âà1.833$

Entonces: $\theta_W=37/1.833‚âà20.18$

Resultado final

$S=37$

$\pi‚âà20$

$\theta_W‚âà20.18$

```{r}

# -----------------------------
# Par√°metros
# -----------------------------
N <- 5e5        # tama√±o efectivo
mu <- 1e-5      # tasa de mutaci√≥n
n <- 4          # n√∫mero de secuencias

# -----------------------------
# 1. Simular tiempos de coalescencia
# -----------------------------
# Funci√≥n para simular tiempo de espera (geom√©trico)
simular_T <- function(n_linajes, N) {
  pares <- choose(n_linajes, 2)
  p <- pares / (2 * N)     # probabilidad de coalescencia por generaci√≥n
  rgeom(1, p)              # tiempo de espera ~ geom√©trica
}

# Guardamos los tiempos
T4 <- simular_T(4, N)
T3 <- simular_T(3, N)
T2 <- simular_T(2, N)

cat("T4 =", T4, "\n")
cat("T3 =", T3, "\n")
cat("T2 =", T2, "\n")

# -----------------------------
# 2. Tiempo total de ramas
# -----------------------------
T_total <- (4 * T4) + (3 * T3) + (2 * T2)
cat("Tiempo total de ramas =", T_total, "\n")

# -----------------------------
# 3. N√∫mero de mutaciones (S)
# -----------------------------
S <- rpois(1, lambda = T_total * mu)  # Poisson con media T_total * mu
cat("N√∫mero de mutaciones S =", S, "\n")

# -----------------------------
# 4. Diversidad nucleot√≠dica (œÄ)
# -----------------------------
pi_est <- 4 * N * mu
cat("œÄ esperado =", pi_est, "\n")

# -----------------------------
# 5. Theta de Watterson (Œ∏W)
# -----------------------------
a_n <- sum(1 / (1:(n - 1)))
theta_W <- S / a_n
cat("Œ∏W estimado =", theta_W, "\n")


```

# Ejercicio 9: Sobre el algoritmo MCMC (Markov chain Monte Carlo)

a) Obtener y decidir sobre las nuevas frecuencias al√©licas

El objetivo aqu√≠ es simular el Paso 1 del algoritmo MCMC, donde se actualizan las frecuencias al√©licas de cada subpoblaci√≥n.

C√°lculo de Verosimilitud

Primero, necesitas entender que la verosimilitud de un conjunto de datos (los genotipos observados) es la probabilidad de observar esos datos, dada una frecuencia al√©lica hipot√©tica. La verosimilitud se puede ver como una medida de "qu√© tan bien" la frecuencia al√©lica se ajusta a los datos.

La verosimilitud de una subpoblaci√≥n con nAA‚Äã genotipos AA, nAa‚Äã genotipos Aa, y naa‚Äã genotipos aa para una frecuencia al√©lica p es proporcional a la funci√≥n de la distribuci√≥n binomial:

$L(p) \propto [p^2]^{n_{\mathrm{AA}}} \cdot [2p(1-p)]^{n_{\mathrm{Aa}}} \cdot [(1-p)^2]^{n_{\mathrm{aa}}}$‚Äã

Subpoblaci√≥n 1

    Estado actual (m‚àí1): Frecuencia P1‚Äã=0.5.

        Genotipos: 13 AA, 24 Aa, 13 aa.

        Verosimilitud actual: L(0.5)‚àù[0.52]13‚ãÖ[2‚ãÖ0.5‚ãÖ0.5]24‚ãÖ[0.52]13=[0.25]13‚ãÖ[0.5]24‚ãÖ[0.25]13=0.2526‚ãÖ0.524.

    Nuevo valor propuesto: El algoritmo propone un nuevo valor de p para la siguiente iteraci√≥n. Para un ejemplo pr√°ctico, supongamos que la nueva propuesta es P1prop‚Äã=0.45.

        Verosimilitud propuesta: L(0.45)‚àù[0.452]13‚ãÖ[2‚ãÖ0.45‚ãÖ0.55]24‚ãÖ[0.552]13=[0.2025]13‚ãÖ[0.495]24‚ãÖ[0.3025]13.

Regla de Decisi√≥n (Metropolis-Hastings)

El algoritmo decide si aceptar el nuevo valor usando el ratio de aceptaci√≥n Œ±=L(ppropuesto‚Äã)/L(pactual‚Äã).

    Œ±1‚Äã=L(0.5)L(0.45)‚Äã=0.2526‚ãÖ0.5240.202513‚ãÖ0.49524‚ãÖ0.302513‚Äã.

    Si Œ±1‚Äã‚â•1, el nuevo valor se acepta.

    Si Œ±1‚Äã<1, el nuevo valor se acepta con una probabilidad igual a Œ±1‚Äã.

Subpoblaci√≥n 2

El mismo proceso se aplica a la subpoblaci√≥n 2.

    Estado actual (m‚àí1): Frecuencia P2‚Äã=0.8.

    Nuevo valor propuesto: Supongamos que se propone P2prop‚Äã=0.75.

    Ratio de aceptaci√≥n: Œ±2‚Äã=L(0.8)L(0.75)‚Äã.

b) Decidir si mover un genotipo

Este es el Paso 2 del algoritmo MCMC, donde se decide la reasignaci√≥n de un individuo.

    Genotipo considerado: Aa.

    Subpoblaciones involucradas: De la subpoblaci√≥n 1 a la 2.

    Frecuencias al√©licas a usar: Las frecuencias actualizadas del Paso 1, P1m‚Äã y P2m‚Äã (aunque para este ejemplo, usaremos P1m‚àí1‚Äã=0.5 y P2m‚àí1‚Äã=0.8).

C√°lculo de la Probabilidad de Pertenencia

El algoritmo compara la probabilidad del genotipo Aa en cada subpoblaci√≥n, dada la frecuencia de alelos de cada una:

    Probabilidad en Subpoblaci√≥n 1: Pr(Aa‚à£Subpop 1)=2‚ãÖP1‚Äã‚ãÖ(1‚àíP1‚Äã)=2‚ãÖ0.5‚ãÖ(1‚àí0.5)=0.5.

    Probabilidad en Subpoblaci√≥n 2: Pr(Aa‚à£Subpop 2)=2‚ãÖP2‚Äã‚ãÖ(1‚àíP2‚Äã)=2‚ãÖ0.8‚ãÖ(1‚àí0.8)=2‚ãÖ0.8‚ãÖ0.2=0.32.

Regla de Decisi√≥n

El algoritmo no solo mueve el genotipo a la subpoblaci√≥n m√°s probable. Utiliza la misma regla de Metropolis-Hastings para decidir si aceptar o rechazar el movimiento.

    Œ±=Probabilidad de pertenecer a la subpoblacioÀän actual (1)Probabilidad de pertenecer a la subpoblacioÀän propuesta (2)‚Äã=0.50.32‚Äã=0.64.

    Dado que Œ±<1, el algoritmo acepta el movimiento con una probabilidad de 0.64.

    Si un n√∫mero aleatorio entre 0 y 1 es menor que 0.64, el individuo se mueve; de lo contrario, se queda en la subpoblaci√≥n 1.

```{r}
# Datos observados
observados <- matrix(c(50, 30, 20, 40, 45, 15), nrow = 2, byrow = TRUE)

# Realizar el test chi-cuadrado
test_chi2 <- chisq.test(observados)

# Resultado del test
test_chi2

```

No hay suficiente evidencia para rechazar la $H_0$.


## C√°lculo del estad√≠stico $\chi^2$ sin usar funcion de R:

La prueba $\chi^2$ que da el valor de X-squared, se calcula usando la ecuacion

$$
\chi^2 = \sum_{i=1}^{r} \sum_{j=1}^{c} \frac{(O_{ij} - E_{ij})^2}{E_{ij}}
$$

Donde $O_{ij}$ son las frecuencias observadas y $E_{ij}$ son las frecuencias esperadas.

$$
\chi^2 = \frac{(50 - 45)^2}{45} + \frac{(30 - 37.5)^2}{37.5} + \frac{(20 - 17.5)^2}{17.5} + \frac{(40 - 45)^2}{45} + \frac{(45 - 37.5)^2}{37.5} + \frac{(15 - 17.5)^2}{17.5}
$$

Siendo

$$
\chi^2 = \frac{25}{45} + \frac{56.25}{37.5} + \frac{6.25}{17.5} + \frac{25}{45} + \frac{56.25}{37.5} + \frac{6.25}{17.5} = 0.556 + 1.5 + 0.357 + 0.556 + 1.5 + 0.357 = 4.826
$$

Los grados de libertad se calculan segun los numeros de r = row (fila) y c = column (columna):

$$
\text{gl} = (r - 1)(c - 1) = (2 - 1)(3 - 1) = 2
$$

El valor de la tabla ($\chi^2$) para un nivel de significancia ($\alpha = 0.05$) y 2 grados de libertad es aproximadamente 5.99. Ver tabla $\chi^2$

Como el estad√≠stico calculado ($\chi^2 = 4.826$) es menor que 5.99, no rechazamos la hip√≥tesis nula.
